Home.js

import React from "react"
import { useLocation } from 'react-router-dom';

function Homepage() {

    const location = useLocation()
    return (
        <div>
            <p>This is Home Page!!</p>

            <h1>Hello {location.state.id} and welcome to the home</h1>

        </div>

    );
}
export default Homepage;


Login.js

import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import axios from "axios";
import {
  MDBContainer,
  MDBInput,
  MDBCheckbox,
  MDBBtn,
  MDBCard,
  MDBCardBody
} from "mdb-react-ui-kit";

function Login() {
  const history = useNavigate();

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  async function submit(e) {
    e.preventDefault();

    try {
      await axios
        .post("http://localhost:8000/", {
          email,
          password,
        })
        .then((res) => {
          if (res.data === "exist") {
            history("/home", { state: { id: email } });
          } else if (res.data === "notexist") {
            alert("User has not signed up");
          }
        })
        .catch((e) => {
          alert("Wrong details");
          console.log(e);
        });
    } catch (e) {
      console.log(e);
    }
  }


  return (
    <form>
      <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="/Homepage">Jail Management System</a>

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="/Homepage">Home <span class="sr-only"></span></a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/Login">Login</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/Signup">Registration</a>
            </li>
          </ul>
        </div>
      </nav>

      <MDBContainer fluid className='d-flex align-items-center justify-content-center bg-image' style={{ backgroundColor: 'Grey' }}>
        <div className='mask gradient-custom-3'>
          <MDBCard className='m-5' style={{ maxWidth: '600px' }}>
            <MDBCardBody className='px-5'>
              <h2 className="text-uppercase text-center mb-5">Jail Guard Officer Login Form</h2>

              <MDBInput
                wrapperClass="mb-4"
                label="Your Email"
                size="lg"
                id="Email"
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="Email"
              />

              <MDBInput
                wrapperClass="mb-4"
                label="Password"
                size="lg"
                id="Password"
                type="Password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="Password"
              />

              <div className="d-flex justify-content-between mx-3 mb-4">
                <MDBCheckbox
                  name="flexCheck"
                  value=""
                  id="flexCheckDefault"
                  label="Remember me"
                />
                <a href="#!">Forgot password?</a>
              </div>

              <MDBBtn className="mb-4" onClick={submit}>
                Sign in
              </MDBBtn>

              <div className="text-center">
                <p>
                  Not a member? <Link to="/signup">Sign up</Link>
                </p>
              </div>

            </MDBCardBody>
          </MDBCard>
        </div>
      </MDBContainer>
    </form>
  );
}

export default Login;


Signup.js

import 'bootstrap/dist/css/bootstrap.css';
import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import axios from "axios";
import {
    MDBBtn,
    MDBContainer,
    MDBRow,
    MDBCol,
    MDBCard,
    MDBCardBody,
    MDBCardImage,
    MDBInput,
} from 'mdb-react-ui-kit';

function Signup() {
    const history = useNavigate();

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [RePassword, setRePassword] = useState('');

    async function submit(e) {
        e.preventDefault();

        try {
            const response = await axios.post("http://localhost:8000/signup", {
                email,
                password
            });

            if (response.data === "exist") {
                alert("User already exists");
            } else if (response.data === "notexist") {
                history("/home", { state: { id: email } });
            }
        } catch (error) {
            alert("wrong details");
            console.log(error);
        }
    }

    return (
        <form>
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <a class="navbar-brand" href="/Homepage">Jail Management System</a>

                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item active">
                            <a class="nav-link" href="/Homepage">Home <span class="sr-only"></span></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/signup">Registration</a>
                        </li>
                    </ul>
                </div>
            </nav>


            <MDBContainer fluid className='d-flex align-items-center justify-content-center bg-image' style={{ backgroundColor: 'Grey' }}>
                <div className='mask gradient-custom-3'>
                    <MDBCard className='m-5' style={{ maxWidth: '600px' }}>
                        <MDBCardBody className='px-5'>
                            <MDBRow>
                                <h2 className="text-uppercase text-center mb-5">Jail Guard Officer Registration Form</h2>

                                <h3 className="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</h3>
                                <MDBInput wrapperClass='mb-4' label='Your Email' size='lg' id='Email' type='email' value={email} onChange={(e) => setEmail(e.target.value)} />

                                <MDBInput wrapperClass='mb-4' label='Password' size='lg' id='Password' type='Password' value={password} onChange={(e) => setPassword(e.target.value)} />

                                <MDBInput wrapperClass='mb-4' label='Re-Password' size='lg' id='RePassword' type='Password' value={RePassword} onChange={(e) => setRePassword(e.target.value)} />


                                <MDBBtn className="mb-4" size="lg" onClick={submit}>
                                    Register
                                </MDBBtn>



                                <MDBCol md="10" lg="6" className="order-1 order-lg-2 d-flex align-items-center">
                                    <MDBCardImage src="" fluid />
                                </MDBCol>
                            </MDBRow>

                            <div className="text-center">
                                <p>
                                    Already Have Account? <Link to="/Login"> Login</Link>
                                </p>
                            </div>
                        </MDBCardBody>


                    </MDBCard>

                </div>
            </MDBContainer>
        </form>
    );
}

export default Signup;


src/app.js
// import './App.css'
import Home from "./components/Home"
import Login from "./components/Login"
import Signup from "./components/Signup"
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";

function App() {
  return (
    <div className="App">
      <Router>
        <Routes>
          <Route path="/Logim" element={<Login />} />
          <Route path="/signup" element={<Signup />} />
          <Route path="/home" element={<Home />} />
        </Routes>
      </Router>
    </div>
  );
}

export default App;


database/app.js
const express = require("express")
const collection = require("./mongo")
const cors = require("cors")
const app = express()
app.use(express.json())
app.use(express.urlencoded({ extended: true }))
app.use(cors())



app.get("/", cors(), (req, res) => {

})


app.post("/", async (req, res) => {
  const { email, password } = req.body

  try {
    const check = await collection.findOne({ email: email })

    if (check) {
      res.json("exist")
    }
    else {
      res.json("notexist")
    }

  }
  catch (e) {
    res.json("fail")
  }

})
async function getData() {
  try {
    await mongoose.connect("mongodb+srv://your-mongodb-connection-string");
    const data = await collection.find();
    return data;
  } catch (error) {
    console.error("Error retrieving data from MongoDB:", error);
    return [];
  } finally {
    mongoose.connection.close();
  }
}

// Route to render the page with the data
app.get("/", async (req, res) => {
  const data = await getData();
  res.render("index", { data });
});


app.post("/signup", async (req, res) => {
  const { email, password } = req.body

  const data = {
    email: email,
    password: password
  }

  try {
    const check = await collection.findOne({ email: email })

    if (check) {
      res.json("exist")
    }
    else {
      res.json("notexist")
      await collection.insertMany([data])
    }

  }
  catch (e) {
    res.json("fail")
  }

})

app.listen(8000, () => {
  console.log("port connected");
})

app.get('/', cors(), async (req, res) => {
  try {
    const data = await collection.find();
    res.json(data);
  } catch (error) {
    console.error('Error retrieving data from MongoDB:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});


mongo.js
const mongoose = require("mongoose")
mongoose.connect("mongodb+srv://junasnazarito:gutib04@cluster0.hogzp7v.mongodb.net/user")
    .then(() => {
        console.log("mongodb connected");
    })
    .catch(() => {
        console.log('failed');
    })


const newSchema = new mongoose.Schema({
    email: {
        type: String,
        required: true
    },
    password: {
        type: String,
        required: true
    }
})

const collection = mongoose.model("collection", newSchema)

module.exports = collection
